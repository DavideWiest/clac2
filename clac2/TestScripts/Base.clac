-- note: use "open ../Std/Numeric" when testing functions with "id" in them

-- check parsing and assignment syntax validation
let y : int = 5
y
let w : int = add 5 5
add 5 5
add y 5
add pi e
-- check parsing that should fail
-- type int3 : int3
-- let abc : = 3
-- let abc2 : int int = 1
-- let abc3 a : int int int = 3

-- check type checking
type int2 : int
type intTwice : int int
type basicArithmetic : int int int
type basicArithmetic2 : int2 int2 int2

-- recursive type definition that should fail
-- type int5 : int6
-- type int6 : int5
-- type int7 : int8
-- others
-- type int3 : int4

-- Argument propagation
add 1 add 2 3
let plus3 a b c : int int int int = add a add b c
plus3 1 2 3

-- manipulations that should fail
-- add id 5
-- add id id

-- check for duplication (should fail)
-- let y : int = 2

-- currying
let applyFive f : (int int) int = f 5
let add2 : (int int) = add 2
applyFive add2